<Activity mc:Ignorable="sap sap2010" x:Class="Process" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:ss="clr-namespace:System.Security;assembly=mscorlib" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property sap2010:Annotation.AnnotationText="Transaction item to be processed." Name="in_TransactionItem" Type="InArgument(sd:DataRow)" />
    <x:Property sap2010:Annotation.AnnotationText="Dictionary structure to store configuration data of the process (settings, constants and assets)." Name="in_Config" Type="InArgument(scg:Dictionary(x:String, x:Object))" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1825,1849</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ProcessTransaction_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="50">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.Windows.Forms</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>UiPath.UIAutomationCore.Contracts</x:String>
      <x:String>UiPath.UIAutomationCore.Contracts</x:String>
      <x:String>System.Security</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="40">
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>Microsoft.VisualStudio.Services.Common</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Data.Entity</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.Windows.Forms</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="Invoke major steps of the business process, which are usually implemented by multiple subworkflows.&#xA;&#xA;If a BusinessRuleException is thrown, the transaction is skipped. &#xA;If another kind of exception occurs, the current transaction can be retried. " DisplayName="Process" sap:VirtualizedContainerService.HintSize="612,1460" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="ErrorMsg" />
      <Variable x:TypeArguments="x:Boolean" Name="ExecutionNeeded" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:LogMessage DisplayName="Log Message Process Start" sap:VirtualizedContainerService.HintSize="550,92" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="[&quot;Started Process&quot;]" />
    <Sequence sap:VirtualizedContainerService.HintSize="550,1013" sap2010:WorkflowViewState.IdRef="Sequence_4">
      <Sequence.Variables>
        <Variable x:TypeArguments="x:String" Name="UrlCreateIncident" />
        <Variable x:TypeArguments="x:String" Name="CompanyName" />
        <Variable x:TypeArguments="x:String" Name="IncidentTemplate" />
        <Variable x:TypeArguments="ui:UiElement" Name="LoginState" />
        <Variable x:TypeArguments="x:String" Name="UsernameSnow" />
        <Variable x:TypeArguments="ss:SecureString" Name="PasswordSnow" />
        <Variable x:TypeArguments="x:String" Name="UrlSnow" />
        <Variable x:TypeArguments="x:String" Name="UrlSearchInc" />
        <Variable x:TypeArguments="x:String" Name="IncidentNumber" />
        <Variable x:TypeArguments="x:String" Name="PathScreenShot" />
      </Sequence.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="AssignVariables.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="486,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_5" UnSafe="False" WorkflowFileName="Workfolder\AssignVariables.xaml">
        <ui:InvokeWorkflowFile.Arguments>
          <InArgument x:TypeArguments="sd:DataRow" x:Key="in_TransactionItem">
            <mva:VisualBasicValue x:TypeArguments="sd:DataRow" ExpressionText="in_TransactionItem" />
          </InArgument>
          <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">
            <mva:VisualBasicValue x:TypeArguments="scg:Dictionary(x:String, x:Object)" ExpressionText="in_Config" />
          </InArgument>
          <OutArgument x:TypeArguments="x:String" x:Key="out_UrlCreateIncident">
            <mva:VisualBasicReference x:TypeArguments="x:String" ExpressionText="UrlCreateIncident" />
          </OutArgument>
          <OutArgument x:TypeArguments="x:String" x:Key="out_CompanyName">
            <mva:VisualBasicReference x:TypeArguments="x:String" ExpressionText="CompanyName" />
          </OutArgument>
          <OutArgument x:TypeArguments="x:String" x:Key="out_IncidentTemplate">
            <mva:VisualBasicReference x:TypeArguments="x:String" ExpressionText="IncidentTemplate" />
          </OutArgument>
          <OutArgument x:TypeArguments="x:String" x:Key="out_SnowUsername">
            <mva:VisualBasicReference x:TypeArguments="x:String" ExpressionText="UsernameSnow" />
          </OutArgument>
          <OutArgument x:TypeArguments="ss:SecureString" x:Key="out_SnowPassword">
            <mva:VisualBasicReference x:TypeArguments="ss:SecureString" ExpressionText="PasswordSnow" />
          </OutArgument>
          <OutArgument x:TypeArguments="x:String" x:Key="out_UrlSnow">
            <mva:VisualBasicReference x:TypeArguments="x:String" ExpressionText="UrlSnow" />
          </OutArgument>
          <OutArgument x:TypeArguments="x:String" x:Key="out_UrlSearchInc">
            <mva:VisualBasicReference x:TypeArguments="x:String" ExpressionText="UrlSearchInc" />
          </OutArgument>
          <InOutArgument x:TypeArguments="x:String" x:Key="ErrorMsg">
            <mva:VisualBasicReference x:TypeArguments="x:String" ExpressionText="ErrorMsg" />
          </InOutArgument>
        </ui:InvokeWorkflowFile.Arguments>
      </ui:InvokeWorkflowFile>
      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Workfolder\OpenAndLoginSnow.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="486,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_6" UnSafe="False" WorkflowFileName="Workfolder\OpenAndLoginSnow.xaml">
        <ui:InvokeWorkflowFile.Arguments>
          <InOutArgument x:TypeArguments="x:String" x:Key="ErrorMsg">[ErrorMsg]</InOutArgument>
          <InArgument x:TypeArguments="sd:DataRow" x:Key="in_TransactionItem">[in_TransactionItem]</InArgument>
          <InOutArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[in_Config]</InOutArgument>
          <OutArgument x:TypeArguments="ui:UiElement" x:Key="out_LoginState">[LoginState]</OutArgument>
          <InArgument x:TypeArguments="x:String" x:Key="in_UsernameSnow">[UsernameSnow]</InArgument>
          <InArgument x:TypeArguments="ss:SecureString" x:Key="in_PasswordSnow">[PasswordSnow]</InArgument>
          <InArgument x:TypeArguments="x:String" x:Key="in_UrlSnow">[UrlSnow]</InArgument>
        </ui:InvokeWorkflowFile.Arguments>
      </ui:InvokeWorkflowFile>
      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Workfolder\CreateTicket.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="486,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_7" UnSafe="False" WorkflowFileName="Workfolder\CreateTicket.xaml">
        <ui:InvokeWorkflowFile.Arguments>
          <InOutArgument x:TypeArguments="x:String" x:Key="ErrorMsg">[ErrorMsg]</InOutArgument>
          <InArgument x:TypeArguments="x:String" x:Key="in_UrlCreateIncident">[UrlCreateIncident]</InArgument>
          <InArgument x:TypeArguments="x:String" x:Key="in_CompanyName">[CompanyName]</InArgument>
          <InArgument x:TypeArguments="x:String" x:Key="in_IncidentTemplate">[IncidentTemplate]</InArgument>
          <InOutArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[in_Config]</InOutArgument>
          <InArgument x:TypeArguments="ui:UiElement" x:Key="in_LoginState">[LoginState]</InArgument>
          <InArgument x:TypeArguments="x:String" x:Key="in_UrlSearchInc">[UrlSearchInc]</InArgument>
          <InArgument x:TypeArguments="sd:DataRow" x:Key="in_TransactionItem">[in_TransactionItem]</InArgument>
          <OutArgument x:TypeArguments="x:String" x:Key="out_IncidentNumber">[IncidentNumber]</OutArgument>
          <OutArgument x:TypeArguments="x:String" x:Key="out_PathScreenshot">[PathScreenShot]</OutArgument>
        </ui:InvokeWorkflowFile.Arguments>
      </ui:InvokeWorkflowFile>
      <If Condition="[ErrorMsg Is Nothing]" sap:VirtualizedContainerService.HintSize="486,443" sap2010:WorkflowViewState.IdRef="If_3">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <If.Then>
          <Sequence sap2010:Annotation.AnnotationText="" sap:VirtualizedContainerService.HintSize="450,255" sap2010:WorkflowViewState.IdRef="Sequence_6">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Workfolder\SendFinalEmail.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="388,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_8" UnSafe="False" WorkflowFileName="Workfolder\SendFinalEmail.xaml">
              <ui:InvokeWorkflowFile.Arguments>
                <InOutArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="In_Config">[in_Config]</InOutArgument>
                <InOutArgument x:TypeArguments="x:String" x:Key="errorMsg">[ErrorMsg]</InOutArgument>
                <InArgument x:TypeArguments="x:String" x:Key="in_ScreenshotPath">[PathScreenShot]</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="in_IncidentNumber">[IncidentNumber]</InArgument>
              </ui:InvokeWorkflowFile.Arguments>
            </ui:InvokeWorkflowFile>
          </Sequence>
        </If.Then>
      </If>
    </Sequence>
    <ui:LogMessage DisplayName="Log Message Process Start" sap:VirtualizedContainerService.HintSize="550,92" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Info" Message="[&quot;Process completed&quot;]" />
  </Sequence>
</Activity>